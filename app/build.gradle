apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply plugin: 'jacoco'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion appConfig.compileVersion

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    defaultConfig {
        applicationId "com.paulacr.wordslearning"
        minSdkVersion appConfig.minVersion
        targetSdkVersion appConfig.targetVersion
        versionCode VERSION_CODE as int
        versionName VERSION_NAME as String
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }


    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    configurations {
        ktlint
    }

    task ktlint(type: JavaExec, group: "verification") {
        description = "Check Kotlin code style."
        classpath = configurations.ktlint
        main = "com.pinterest.ktlint.Main"
        args "src/**/*.kt"
        // to generate report in checkstyle format prepend following args:
        // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
        // see https://github.com/pinterest/ktlint#usage for more
    }
    check.dependsOn ktlint

    task ktlintFormat(type: JavaExec, group: "formatting") {
        description = "Fix Kotlin code style deviations."
        classpath = configurations.ktlint
        main = "com.pinterest.ktlint.Main"
        args "-F", "src/**/*.kt"
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // UI
    implementation "androidx.appcompat:appcompat:$versions.appCompat"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
    implementation "com.android.support:design:$versions.materialDesign"
    implementation "com.google.android.material:material:1.2.0-alpha06"
    implementation 'com.github.devsideal:VectorChildFinder:1.0.0'
    implementation 'com.bignerdranch.android:simple-item-decoration:1.0.0'
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigation"

    // KOTLIN
    implementation "androidx.core:core-ktx:$versions.coreKtx"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    ktlint "com.pinterest:ktlint:$versions.ktLint"

    // NETWORKING
    implementation "io.reactivex.rxjava3:rxandroid:$versions.rxjava"
    implementation "io.reactivex.rxjava3:rxjava:$versions.rxjava"
    implementation "com.github.akarnokd:rxjava3-retrofit-adapter:$versions.rxJavaAdapter"
    implementation "com.squareup.retrofit2:converter-gson:$versions.gsonConverter"
    implementation "com.google.code.gson:gson:$versions.gson"
    implementation "com.squareup.okhttp3:okhttp:$versions.okHttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.loggingIntercept"

    // DEPENDENCY INJECTION
    implementation "org.koin:koin-core:$versions.koin"
    implementation "org.koin:koin-androidx-scope:$versions.koin"
    implementation "org.koin:koin-androidx-ext:$versions.koin"

    // ANALYTICS / MONITORING
    implementation "com.google.firebase:firebase-analytics:$versions.firebase"
    implementation "com.google.firebase:firebase-crashlytics:$versions.fcrashlytics"
    implementation "com.crashlytics.sdk.android:crashlytics:$versions.crashlytics"

    // TRANSLATOR
    implementation "com.google.firebase:firebase-ml-natural-language:$versions.firebaseNatLang"
    implementation "com.google.firebase:firebase-ml-natural-language-translate-model:$versions.firebaseNatModel"

    // ANIMATION
    implementation "com.airbnb.android:lottie:$versions.lottie"

    // TESTS
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    testImplementation "org.koin:koin-test:$versions.koin"
}

apply from: '../jacoco.gradle'